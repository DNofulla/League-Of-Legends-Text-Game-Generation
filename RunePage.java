package package1;

/* The RunePage class holds a Keystone Rune, and a tier1, tier2, and tier3 Rune */
public class RunePage implements TheInterface {
	
	// Keystone rune and a rune for each tiered rune 1-3
	private Runes keystone;
	private Runes tier1;
	private Runes tier2;
	private Runes tier3;
	
	// When instantiating a rune page, the runes are generated by the generate function
	public RunePage() {
		generate();
	}
	
	// Getters and Setters for all the runes
	public Runes getKeystone() {
		return keystone;
	}
	
	public void setKeystone(Runes keystone) {
		this.keystone = keystone;
	}
	
	public Runes getTier1() {
		return tier1;
	}
	
	public void setTier1(Runes tier1) {
		this.tier1 = tier1;
	}
	
	public Runes getTier2() {
		return tier2;
	}
	
	public void setTier2(Runes tier2) {
		this.tier2 = tier2;
	}
	
	public Runes getTier3() {
		return tier3;
	}
	
	public void setTier3(Runes tier3) {
		this.tier3 = tier3;
	}
	
	// This toString() function makes the string version of the Rune Page look neat
	public String toString() {
		String str;
			
		str = "\nRUNE PAGE" + 
			  "\n------------------------------------------"+
			  getKeystone().toString() + "\n" +
			  getTier1().toString() + "\n" + 
			  getTier2().toString() + "\n" +
			  getTier3().toString() + "\n";
		
		return str;
	}
	
	// This function generates/instantiates all the runes which are given randomized values and descriptions
	public void generate() {
		setKeystone(new Keystone());
		setTier1(new Tier1Rune());
		setTier2(new Tier2Rune());
		setTier3(new Tier3Rune());
	}
	
}
